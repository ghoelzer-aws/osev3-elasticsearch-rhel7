apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: foodtrucks
    name: foodtrucks
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: foodtrucks:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: https://github.com/prakhar1989/FoodTrucks.git
      secrets: []
      type: Git
    strategy:
      type: Docker
    triggers:
    - github:
        secret: 8U7S-GdJe_NoTRC37F-e
      type: GitHub
    - generic:
        secret: LoMLzJpD4t2DrX48LPYW
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: foodtrucks
    name: foodtrucks
  spec:
    replicas: 1
    selector:
      app: foodtrucks
      deploymentconfig: foodtrucks
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/container.foodtrucks.image.entrypoint: '["/bin/bash"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: foodtrucks
          deploymentconfig: foodtrucks
      spec:
        containers:
        - image: foodtrucks:latest
          name: foodtrucks
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - foodtrucks
        from:
          kind: ImageStreamTag
          name: foodtrucks:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: foodtrucks
    name: foodtrucks
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: foodtrucks
      deploymentconfig: foodtrucks
  status:
    loadBalancer: {}
kind: List
metadata: {}
